licenses(["notice"])
package(default_visibility = ["//visibility:public"])

cc_library(
    name = "gtest",
    testonly = 1,
    linkstatic = 1,
    copts = [
        "-Iexternal/gtest_repo/googletest"
    ],
    srcs = glob([
        "googletest/src/gtest-death-test.cc",
        "googletest/src/gtest-filepath.cc",
        "googletest/src/gtest-port.cc",
        "googletest/src/gtest-printers.cc",
        "googletest/src/gtest-test-part.cc",
        "googletest/src/gtest-typed-test.cc",
        "googletest/src/gtest.cc",
        "googletest/src/gtest-internal-inl.h",
        "include/gtest/*.h"],
        exclude=[
            "googletest/src/gtest-all.cc",
            "googletest/src/gtest_main.cc"
        ]),
    hdrs = glob(["googletest/include/gtest/*.h"]),
    includes = [ "googletest/include" ],
)

cc_library(
    name = "gtest_main",
    testonly = 1,
    linkstatic = 1,
    deps = [":gtest"],
    srcs = ["googletest/src/gtest_main.cc"]
)

cc_library(
    name = "gmock",
    testonly = 1,
    hdrs = [
        "googlemock/include/gmock/gmock-actions.h",
        "googlemock/include/gmock/gmock-cardinalities.h",
        "googlemock/include/gmock/gmock-generated-actions.h",
        "googlemock/include/gmock/gmock-generated-function-mockers.h",
        "googlemock/include/gmock/gmock-generated-matchers.h",
        "googlemock/include/gmock/gmock-generated-nice-strict.h",
        "googlemock/include/gmock/gmock.h",
        "googlemock/include/gmock/gmock-matchers.h",
        "googlemock/include/gmock/gmock-more-actions.h",
        "googlemock/include/gmock/gmock-more-matchers.h",
        "googlemock/include/gmock/gmock-spec-builders.h",
    ],
    srcs = glob(["googlemock/include/gmock/internal/*.h"]) + [
        "googlemock/src/gmock-cardinalities.cc",
        "googlemock/src/gmock.cc",
        "googlemock/src/gmock-internal-utils.cc",
        "googlemock/src/gmock-matchers.cc",
        "googlemock/src/gmock-spec-builders.cc",
    ],
    deps = [
        "//external:gtest",
    ],
    includes = [
        "googlemock/include",
    ],
)

cc_library(
    name = "gmock_main",
    deps = [
        ":gmock",
    ],
    srcs = [
        "googlemock/src/gmock_main.cc",
    ],
)
